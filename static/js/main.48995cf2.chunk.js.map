{"version":3,"sources":["DataLayer.js","spotify.js","Components/Login/Login.js","Components/Header/Header.js","Components/SongRow/SongRow.js","Components/Body/Body.js","Components/Footer/Footer.js","Components/SidebarOption/SidebarOption.js","Components/Sidebar/Sidebar.js","Components/Player/Player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","accessUrl","join","Login","className","src","alt","href","Header","user","placeholder","Avatar","images","url","display_name","SongRow","track","playSong","album","name","artists","map","artist","Body","spotify","discover_weekly","description","fontSize","tracks","items","item","key","id","Footer","playing","dispatch","useEffect","getMyCurrentPlaybackState","then","r","type","is_playing","handlePlayPause","pause","play","onClick","skipToPrevious","getMyCurrentPlayingTrack","skipToNext","Grid","container","spacing","xs","Slider","SidebarOption","title","Icon","getPlaylist","setCurrentPlaylist","Sidebar","playlists","response","HomeIcon","SearchIcon","LibraryMusicIcon","playlist","Player","SpotifyWebApi","App","token","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","getUserPlaylists","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"4ZAEaA,EAAmBC,0BAEnBC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,SAA1B,OACvB,kBAACL,EAAiBM,SAAlB,CAA2BC,MAAOC,qBAAWJ,EAASD,IACnDE,IAIQI,EAAoB,kBAAMC,qBAAWV,ICarCW,G,MAAS,UAvBM,wCAuBN,sBArBL,mCAqBK,yBAtBF,kDAsBE,kBAnBP,CACb,8BACA,4BACA,2BACA,gBACA,8BAcyGC,KACzG,OADoB,0CCnBTC,EAAQ,WACnB,OACE,yBAAKC,UAAU,SACb,yBACEC,IAAI,0EACJC,IAAI,SAEN,uBAAGC,KAAMN,GAAT,wB,iCCLOO,G,MAAS,WAAO,IAAD,IACPT,IAAVU,EADiB,oBACjBA,KACT,OACE,yBAAKL,UAAU,UACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,MACA,2BAAOM,YAAY,uBAErB,yBAAKN,UAAU,iBACb,kBAACO,EAAA,EAAD,CAAQN,IAAG,OAAEI,QAAF,IAAEA,GAAF,UAAEA,EAAMG,OAAO,UAAf,aAAE,EAAiBC,IAAKP,IAAG,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAMK,eAC9C,mCAAKL,QAAL,IAAKA,OAAL,EAAKA,EAAMK,kBCbNC,G,MAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAsB,EAAfC,SAC/B,OACE,yBAAKb,UAAU,WACb,yBACEC,IAAKW,EAAME,MAAMN,OAAO,GAAGC,IAC3BT,UAAU,iBACVE,IAAKU,EAAME,MAAMC,OAEnB,yBAAKf,UAAU,iBACb,4BAAKY,EAAMG,MACX,2BACGH,EAAMI,QAAQC,KAAI,SAACC,GAAD,OAAYA,EAAOH,QAAMjB,KAAK,MADnD,KAC4D,IACzDc,EAAME,MAAMC,U,mDCLVI,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACLzB,IAArB0B,EAD0B,oBAC1BA,gBACT,OACE,yBAAKrB,UAAU,QACb,kBAAC,EAAD,CAAQoB,QAASA,IACjB,yBAAKpB,UAAU,cACb,yBAAKC,IAAG,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAAiBb,OAAO,GAAGC,IAAKP,IAAI,KAC9C,yBAAKF,UAAU,kBACb,4CACA,mCAAKqB,QAAL,IAAKA,OAAL,EAAKA,EAAiBN,MACtB,kCAAIM,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBC,eAGzB,yBAAKtB,UAAU,eACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAsBA,UAAU,kBAChC,kBAAC,IAAD,CAAcuB,SAAS,UACvB,kBAAC,IAAD,OAJJ,OAMGF,QANH,IAMGA,OANH,EAMGA,EAAiBG,OAAOC,MAAMR,KAAI,SAACS,GAAD,OACjC,kBAAC,EAAD,CAASd,MAAOc,EAAKd,MAAOe,IAAKD,EAAKd,MAAMgB,W,iLCdzCC,EAAS,SAAC,GAAiB,IAAfT,EAAc,EAAdA,QAAc,EACCzB,IADD,0BAC5B+B,EAD4B,EAC5BA,KAAMI,EADsB,EACtBA,QAAWC,EADW,KAGrCC,qBAAU,WACRZ,EAAQa,4BAA4BC,MAAK,SAACC,GACxCJ,EAAS,CACPK,KAAM,cACNN,QAASK,EAAEE,aAEbN,EAAS,CACPK,KAAM,WACNV,KAAMS,EAAET,YAGX,CAACK,EAAUX,IAEd,IAAMkB,EAAkB,WAClBR,GACFC,EAAS,CACPK,KAAM,cACNN,SAAS,IAEXV,EAAQmB,UAERR,EAAS,CACPK,KAAM,cACNN,SAAS,IAEXV,EAAQoB,SAgCZ,OACE,yBAAKxC,UAAU,UACb,yBAAKA,UAAU,gBACZ0B,GACC,yBACE1B,UAAU,oBACVC,IAAKyB,EAAKZ,MAAMN,OAAO,GAAGC,IAC1BP,IAAKwB,EAAKX,OAGbW,EACC,yBAAK1B,UAAU,oBACb,4BAAK0B,EAAKX,MACV,2BAAIW,EAAKV,QAAQC,KAAI,SAACC,GAAD,OAAYA,EAAOH,QAAMjB,KAAK,QAGrD,yBAAKE,UAAU,oBACb,kDACA,oCAIN,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAaA,UAAU,kBACvB,kBAAC,IAAD,CAAkBA,UAAU,eAAeyC,QAtC5B,WACnBrB,EAAQsB,iBACRtB,EAAQuB,2BAA2BT,MAAK,SAACC,GACvCJ,EAAS,CACPK,KAAM,WACNV,KAAMS,EAAET,OAEVK,EAAS,CACPK,KAAM,cACNN,SAAS,UA8BRA,EACC,kBAAC,IAAD,CACEW,QAASH,EACTf,SAAS,QACTvB,UAAU,iBAGZ,kBAAC,IAAD,CACEyC,QAASH,EACTf,SAAS,QACTvB,UAAU,iBAGd,kBAAC,IAAD,CAAcA,UAAU,eAAeyC,QAlE5B,WACfrB,EAAQwB,aACRxB,EAAQuB,2BAA2BT,MAAK,SAACC,GACvCJ,EAAS,CACPK,KAAM,WACNV,KAAMS,EAAET,OAEVK,EAAS,CACPK,KAAM,cACNN,SAAS,UA0DT,kBAAC,IAAD,CAAY9B,UAAU,mBAExB,yBAAKA,UAAU,iBACb,kBAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMnB,MAAI,GACR,kBAAC,IAAD,OAEF,kBAACmB,EAAA,EAAD,CAAMnB,MAAI,GACR,kBAAC,IAAD,OAEF,kBAACmB,EAAA,EAAD,CAAMnB,MAAI,EAACsB,IAAE,GACX,kBAACC,EAAA,EAAD,OAEF,kBAACJ,EAAA,EAAD,CAAMnB,MAAI,GACR,kBAAC,IAAD,WC5HCwB,G,YAAgB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMxB,EAAkB,EAAlBA,GAAIR,EAAc,EAAdA,QAAc,EACxCzB,IAAZoC,EADoD,oBAW7D,OACE,yBAAK/B,UAAU,kBACZoD,GAAQ,kBAACA,EAAD,CAAMpD,UAAU,yBACxBoD,EACC,4BAAKD,GAEL,uBAAGV,QAAS,kBAdS,SAACb,GAC1BR,EAAQiC,YAAYzB,GAAIM,MAAK,SAACC,GAC5BJ,EAAS,CACPK,KAAM,sBACNf,gBAAiBc,OAUCmB,CAAmB1B,KAAMuB,M,kCCbtCI,EAAU,SAAC,GAAiB,IAAD,EAAdnC,EAAc,EAAdA,QAAc,EACJzB,IADI,mBAC7B6D,EAD6B,KAC7BA,UAAazB,EADgB,KAYtC,OACE,yBAAK/B,UAAU,WACb,yBACEyC,QAZmB,WACvBrB,EAAQiC,YAAY,0BAA0BnB,MAAK,SAACuB,GAAD,OACjD1B,EAAS,CACPK,KAAM,sBACNf,gBAAiBoC,QASjBzD,UAAU,gBACVE,IAAI,OACJD,IAAI,4EAEN,kBAAC,EAAD,CAAekD,MAAM,OAAOC,KAAMM,MAClC,kBAAC,EAAD,CAAeP,MAAM,SAASC,KAAMO,MACpC,kBAAC,EAAD,CAAeR,MAAM,eAAeC,KAAMQ,MAC1C,6BACA,4BAAQ5D,UAAU,kBAAlB,aACA,6BAZF,OAaGwD,QAbH,IAaGA,GAbH,UAaGA,EAAW/B,aAbd,aAaG,EAAkBR,KAAI,SAAC4C,GAAD,OACrB,kBAAC,EAAD,CACEV,MAAOU,EAAS9C,KAChBY,IAAKkC,EAASjC,GACdA,GAAIiC,EAASjC,GACbR,QAASA,SClCN0C,I,MAAS,SAAC,GAAiB,IAAf1C,EAAc,EAAdA,QACvB,OACE,yBAAKpB,UAAU,UACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAASoB,QAASA,IAClB,kBAAC,EAAD,CAAMA,QAASA,KAEjB,kBAAC,EAAD,CAAQA,QAASA,OCNjBA,GAAU,IAAI2C,IA4CLC,OA1Cf,WAAgB,IAAD,EACiBrE,IADjB,mBACJsE,EADI,KACJA,MAASlC,EADL,KAmCb,OAhCAC,qBAAU,WACR,IAAMkC,ETADC,OAAOC,SAASF,KACpBG,UAAU,GACVC,MAAM,KACNC,QAAO,SAACC,EAAS9C,GAChB,IAAI+C,EAAQ/C,EAAK4C,MAAM,KAEvB,OADAE,EAAQC,EAAM,IAAMC,mBAAmBD,EAAM,IACtCD,IACN,ISNHL,OAAOC,SAASF,KAAO,GACvB,IAAMS,EAAST,EAAKU,aAEhBD,IACF5C,EAAS,CACPK,KAAM,YACN6B,MAAOU,IAETvD,GAAQyD,eAAeF,GACvBvD,GAAQ0D,QAAQ5C,MAAK,SAAC7B,GACpB0B,EAAS,CACPK,KAAM,WACN/B,YAGJe,GAAQ2D,mBAAmB7C,MAAK,SAACsB,GAC/BzB,EAAS,CACPK,KAAM,gBACNoB,iBAIJpC,GAAQiC,YAAY,0BAA0BnB,MAAK,SAACuB,GAAD,OACjD1B,EAAS,CACPK,KAAM,sBACNf,gBAAiBoC,UAItB,CAAC1B,EAAUkC,IAEZ,yBAAKjE,UAAU,OACZiE,EAAQ,kBAAC,GAAD,CAAQ7C,QAASA,KAAc,kBAAC,EAAD,QClC1B4D,QACW,cAA7Bb,OAAOC,SAASa,UAEe,UAA7Bd,OAAOC,SAASa,UAEhBd,OAAOC,SAASa,SAASC,MACvB,2D,YC4BS5F,GArCC,SAAC6F,EAAOC,GACtB,OAAQA,EAAOhD,MACb,IAAK,WACH,OAAO,6BACF+C,GADL,IAEE9E,KAAM+E,EAAO/E,OAEjB,IAAK,YACH,OAAO,6BACF8E,GADL,IAEElB,MAAOmB,EAAOnB,QAElB,IAAK,gBACH,OAAO,6BACFkB,GADL,IAEE3B,UAAW4B,EAAO5B,YAEtB,IAAK,sBACH,OAAO,6BACF2B,GADL,IAEE9D,gBAAiB+D,EAAO/D,kBAE5B,IAAK,WACH,OAAO,6BACF8D,GADL,IAEEzD,KAAM0D,EAAO1D,OAEf,IAAK,cACH,OAAO,6BACFyD,GADL,IAEErD,QAASsD,EAAOtD,UAEtB,QACE,OAAOqD,IClCbE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAWlG,aDVa,CAC1BgB,KAAM,KACNmD,UAAW,GACX1B,SAAS,EACTJ,KAAM,KACNL,gBAAiB,KACjB4C,MAAO,MCIkC3E,QAASA,IAC9C,kBAAC,GAAD,QAGJkG,SAASC,eAAe,SFqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1D,MAAK,SAAA2D,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.48995cf2.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({ initialState, reducer, children }) => (\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </DataLayerContext.Provider>\n);\n\nexport const useDataLayerValue = () => useContext(DataLayerContext);\n","export const authEndpoint = \"http://accounts.spotify.com/authorize\";\r\nconst redirectUri = \"https://romamykhalchuk.github.io/spotify_clone/\";\r\nconst clientId = \"e250c14aef2e40e5b027154f126f9920\";\r\n\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromUrl = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      let parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const accessUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n\r\n\r\n//BQCzPsH3Kqee4Tf05o4iuU-9TxQ-LbNitO-jj29tLdIIjAZ4b2D-ONwfXnkzixafpPAlSfOPNaspdcVj6QUxpH3F8JbwmyxZkXN0QhqRr3vEkNVeZoabz3u4eJRdufOpg3FTo-lg4TsDxMccvmnGIT7gxVnuwZAD0spVUJbEUyUcGXqt8dtl","import React from \"react\";\nimport \"./Login.css\";\nimport { accessUrl } from \"../../spotify\";\n\nexport const Login = () => {\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n        alt=\"logo\"\n      />\n      <a href={accessUrl}>LOGIN WITH SPOTIFY</a>\n    </div>\n  );\n};\n","import React from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Avatar } from \"@material-ui/core\";\nimport { useDataLayerValue } from \"../../DataLayer\";\nimport \"./Header.css\";\n\nexport const Header = () => {\n  const [{ user }] = useDataLayerValue();\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <SearchIcon />\n        <input placeholder=\"Search for artist\" />\n      </div>\n      <div className=\"header__right\">\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\n        <h4>{user?.display_name}</h4>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./SongRow.css\";\n\nexport const SongRow = ({ track, playSong }) => {\n  return (\n    <div className=\"songRow\">\n      <img\n        src={track.album.images[0].url}\n        className=\"songRow__album\"\n        alt={track.album.name}\n      />\n      <div className=\"songRow__info\">\n        <h1>{track.name}</h1>\n        <p>\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\n          {track.album.name}\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\r\nimport \"./Body.css\";\r\nimport { Header } from \"../Header/Header\";\r\nimport { SongRow } from \"../SongRow/SongRow\";\r\nimport { useDataLayerValue } from \"../../DataLayer\";\r\n\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nexport const Body = ({ spotify }) => {\r\n  const [{ discover_weekly }] = useDataLayerValue();\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n      <div className=\"body__info\">\r\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>{discover_weekly?.name}</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon className=\"body__shuffle\" />\r\n          <FavoriteIcon fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n        {discover_weekly?.tracks.items.map((item) => (\r\n          <SongRow track={item.track} key={item.track.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\nimport \"./Footer.css\";\nimport { useDataLayerValue } from \"../../DataLayer\";\n\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport Slider from \"@material-ui/core/Slider\";\nimport VolumeDown from \"@material-ui/icons/VolumeDown\";\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\n\nexport const Footer = ({ spotify }) => {\n  const [{ item, playing }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    spotify.getMyCurrentPlaybackState().then((r) => {\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: r.is_playing,\n      });\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item,\n      });\n    });\n  }, [dispatch, spotify]);\n\n  const handlePlayPause = () => {\n    if (playing) {\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: false,\n      });\n      spotify.pause();\n    } else {\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: true,\n      });\n      spotify.play();\n    }\n  };\n\n  const skipNext = () => {\n    spotify.skipToNext();\n    spotify.getMyCurrentPlayingTrack().then((r) => {\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item,\n      });\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: true,\n      });\n    });\n  };\n\n  const skipPrevious = () => {\n    spotify.skipToPrevious();\n    spotify.getMyCurrentPlayingTrack().then((r) => {\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item,\n      });\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: true,\n      });\n    });\n  };\n\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__left\">\n        {item && (\n          <img\n            className=\"footer__albumLogo\"\n            src={item.album.images[0].url}\n            alt={item.name}\n          />\n        )}\n        {item ? (\n          <div className=\"footer__songInfo\">\n            <h4>{item.name}</h4>\n            <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\n          </div>\n        ) : (\n          <div className=\"footer__songInfo\">\n            <h4>No song is playing</h4>\n            <p>...</p>\n          </div>\n        )}\n      </div>\n      <div className=\"footer__center\">\n        <ShuffleIcon className=\"footer__green\" />\n        <SkipPreviousIcon className=\"footer__icon\" onClick={skipPrevious} />\n        {playing ? (\n          <PauseCircleOutlineIcon\n            onClick={handlePlayPause}\n            fontSize=\"large\"\n            className=\"footer__icon\"\n          />\n        ) : (\n          <PlayCircleOutlineIcon\n            onClick={handlePlayPause}\n            fontSize=\"large\"\n            className=\"footer__icon\"\n          />\n        )}\n        <SkipNextIcon className=\"footer__icon\" onClick={skipNext} />\n        <RepeatIcon className=\"footer__green\" />\n      </div>\n      <div className=\"footer__right\">\n        <Grid container spacing={2}>\n          <Grid item>\n            <PlaylistPlayIcon />\n          </Grid>\n          <Grid item>\n            <VolumeDown />\n          </Grid>\n          <Grid item xs>\n            <Slider />\n          </Grid>\n          <Grid item>\n            <VolumeUp />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./SidebarOption.css\";\n\nimport { useDataLayerValue } from \"../../DataLayer\";\n\nexport const SidebarOption = ({ title, Icon, id, spotify }) => {\n  const [, dispatch] = useDataLayerValue();\n\n  const setCurrentPlaylist = (id) => {\n    spotify.getPlaylist(id).then((r) => {\n      dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: r,\n      });\n    });\n  };\n  return (\n    <div className=\"siderbarOption\">\n      {Icon && <Icon className=\"siderbarOption__icon\" />}\n      {Icon ? (\n        <h4>{title}</h4>\n      ) : (\n        <p onClick={() => setCurrentPlaylist(id)}>{title}</p>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./Sidebar.css\";\nimport { useDataLayerValue } from \"../../DataLayer\";\nimport { SidebarOption } from \"../SidebarOption/SidebarOption\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\n\nexport const Sidebar = ({ spotify }) => {\n  const [{ playlists }, dispatch] = useDataLayerValue();\n\n  const setBasicPlaylist = () => {\n    spotify.getPlaylist(\"37i9dQZF1DX0UrRvztWcAU\").then((response) =>\n      dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response,\n      })\n    );\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <img\n        onClick={setBasicPlaylist}\n        className=\"sidebar__logo\"\n        alt=\"logo\"\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n      />\n      <SidebarOption title=\"Home\" Icon={HomeIcon} />\n      <SidebarOption title=\"Search\" Icon={SearchIcon} />\n      <SidebarOption title=\"Your Library\" Icon={LibraryMusicIcon} />\n      <br />\n      <strong className=\"sidebar__title\">Playlists</strong>\n      <hr />\n      {playlists?.items?.map((playlist) => (\n        <SidebarOption\n          title={playlist.name}\n          key={playlist.id}\n          id={playlist.id}\n          spotify={spotify}\n        />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Body } from \"../Body/Body\";\nimport { Footer } from \"../Footer/Footer\";\nimport { Sidebar } from \"../Sidebar/Sidebar\";\nimport \"./Player.css\";\n\nexport const Player = ({ spotify }) => {\n  return (\n    <div className=\"player\">\n      <div className=\"player__body\">\n        <Sidebar spotify={spotify} />\n        <Body spotify={spotify} />\n      </div>\n      <Footer spotify={spotify} />\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport { Login } from \"./Components/Login/Login\";\r\nimport { Player } from \"./Components/Player/Player\";\r\nimport { getTokenFromUrl } from \"./spotify\";\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\nfunction App() {\r\n  const [{ token }, dispatch] = useDataLayerValue();\r\n\r\n  useEffect(() => {\r\n    const hash = getTokenFromUrl();\r\n    window.location.hash = \"\";\r\n    const _token = hash.access_token;\r\n\r\n    if (_token) {\r\n      dispatch({\r\n        type: \"SET_TOKEN\",\r\n        token: _token,\r\n      });\r\n      spotify.setAccessToken(_token);\r\n      spotify.getMe().then((user) => {\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user,\r\n        });\r\n      });\r\n      spotify.getUserPlaylists().then((playlists) => {\r\n        dispatch({\r\n          type: \"SET_PLAYLISTS\",\r\n          playlists,\r\n        });\r\n      });\r\n\r\n      spotify.getPlaylist(\"37i9dQZF1DX0UrRvztWcAU\").then((response) =>\r\n        dispatch({\r\n          type: \"SET_DISCOVER_WEEKLY\",\r\n          discover_weekly: response,\r\n        })\r\n      );\r\n    }\r\n  }, [dispatch, token]);\r\n  return (\r\n    <div className=\"app\">\r\n      {token ? <Player spotify={spotify} /> : <Login />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n  user: null,\r\n  playlists: [],\r\n  playing: false,\r\n  item: null,\r\n  discover_weekly: null,\r\n  token: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"SET_TOKEN\":\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n    case \"SET_PLAYLISTS\":\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists\r\n      };\r\n    case \"SET_DISCOVER_WEEKLY\":\r\n      return {\r\n        ...state,\r\n        discover_weekly: action.discover_weekly\r\n      };\r\n    case \"SET_ITEM\":\r\n      return {\r\n        ...state,\r\n        item: action.item\r\n      };\r\n      case \"SET_PLAYING\":\r\n        return {\r\n          ...state,\r\n          playing: action.playing,\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { DataLayer } from \"./DataLayer\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}